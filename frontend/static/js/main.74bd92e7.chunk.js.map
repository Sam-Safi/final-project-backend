{"version":3,"sources":["components/auth/Login.js","components/auth/Signup.js","components/Admin.js","components/Book.js","components/BookList.js","components/EditBook.js","App.js","serviceWorker.js","index.js"],"names":["Login","state","email","password","handleChange","bind","handleSubmit","event","this","setState","target","name","value","preventDefault","myHeaders","Headers","append","urlencoded","URLSearchParams","fetch","method","headers","body","redirect","credentials","then","response","a","async","status","props","changeLoginStatus","console","log","history","push","catch","error","onSubmit","className","type","placeholder","onChange","id","htmlFor","Component","SignUp","firstname","lastname","firstnameErrorMsg","lastnameErrorMsg","emailErrorMsg","passwordErrorMsg","formValid","checkValidation","json","Admin","toggle","modal","handleFileChange","file","files","formData","FormData","title","author","description","image","e","Button","color","style","marginBottom","onClick","Modal","isOpen","ModalHeader","ModalBody","Form","FormGroup","Label","for","Input","marginTop","block","Book","Col","xs","sm","md","lg","xl","Card","CardImg","top","width","src","book","alt","CardBody","CardTitle","CardSubtitle","CardText","onDelete","_id","to","BookList","handleDelete","bookId","result","books","fetchBookList","length","map","key","handleEdit","Container","Row","renderBooks","EditBook","requestOptions","bookID","match","params","bookid","App","useState","userLogin","setUserLogin","exact","path","component","render","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.74bd92e7.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nexport class Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: \"\",\n      password: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n\n    const urlencoded = new URLSearchParams();\n    urlencoded.append(\"email\", this.state.email);\n    urlencoded.append(\"password\", this.state.password);\n\n    const requestOptions = {\n      method: \"POST\",\n      headers: myHeaders,\n      body: urlencoded,\n      redirect: \"follow\",\n      credentials: \"same-origin\"\n    };\n\n    fetch(\"/user/login\", requestOptions)\n      .then(async response => {\n        if (+response.status === 200) {\n          this.props.changeLoginStatus(true);\n          console.log(\"props\", this.props);\n          this.props.history.push(\"/admin\");\n        }\n      })\n      .catch(error => console.log(\"error\", error));\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <div className=\"auth-inner\">\n          <h3>Sign In</h3>\n\n          <div className=\"form-group\">\n            <label>Email address</label>\n            <input\n              type=\"email\"\n              className=\"form-control\"\n              placeholder=\"Enter email\"\n              name=\"email\"\n              value={this.state.email}\n              onChange={this.handleChange}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label>Password</label>\n            <input\n              type=\"password\"\n              className=\"form-control\"\n              placeholder=\"Enter password\"\n              name=\"password\"\n              value={this.state.password}\n              onChange={this.handleChange}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <div className=\"custom-control custom-checkbox\">\n              <input\n                type=\"checkbox\"\n                className=\"custom-control-input\"\n                id=\"customCheck1\"\n              />\n              <label className=\"custom-control-label\" htmlFor=\"customCheck1\">\n                Remember me\n              </label>\n            </div>\n          </div>\n\n          <button type=\"submit\" className=\"btn btn-primary btn-block\">\n            Submit\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport class SignUp extends Component {\n  constructor() {\n    super();\n    this.state = {\n      firstname: \"\",\n      lastname: \"\",\n      email: \"\",\n      password: \"\",\n      firstnameErrorMsg: \"\",\n      lastnameErrorMsg: \"\",\n      emailErrorMsg: \"\",\n      passwordErrorMsg: \"\",\n      formValid: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    console.log(event.target.value);\n    this.setState({\n      [event.target.name]: event.target.value,\n      [`${event.target.name}ErrorMsg`]: \"\"\n    });\n  }\n\n  checkValidation() {\n    let formValid = true;\n    if (!this.state.firstname) {\n      this.setState({\n        firstnameErrorMsg: \"Please specify First name \"\n      });\n      formValid = false;\n    }\n    if (!this.state.lastname) {\n      this.setState({\n        lastnameErrorMsg: \"Please specify Last name \"\n      });\n      formValid = false;\n    }\n    if (!this.state.email) {\n      this.setState({\n        emailErrorMsg: \"Please specify Enter email \"\n      });\n      formValid = false;\n    }\n    if (!this.state.password) {\n      this.setState({\n        passwordErrorMsg: \"Please specify Enter password \"\n      });\n      formValid = false;\n    }\n\n    return formValid;\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    if (!this.checkValidation()) {\n      return;\n    }\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n    myHeaders.append(\"Authorization\", \"Basic U2FtOmRvZG8=\");\n\n    const urlencoded = new URLSearchParams();\n    urlencoded.append(\"firstname\", this.state.firstname);\n    urlencoded.append(\"lastname\", this.state.lastname);\n    urlencoded.append(\"email\", this.state.email);\n    urlencoded.append(\"password\", this.state.password);\n\n    const requestOptions = {\n      method: \"POST\",\n      headers: myHeaders,\n      body: urlencoded,\n      redirect: \"follow\",\n      credentials: \"same-origin\"\n    };\n\n    fetch(\"/public/newUser\", requestOptions)\n      .then(response => {\n        if (+response.status >= 200 && +response.status < 300) {\n          this.props.history.push(\"/sign-in\");\n          console.log(response.json());\n        }\n        // redirect is here\n      })\n\n      .catch(error => console.log(\"error\", error));\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <div className=\"auth-inner\">\n          <h3>Sign Up</h3>\n\n          <div className=\"form-group\">\n            <label>First name</label>\n            <input\n              type=\"text\"\n              className={`form-control ${this.state.firstnameErrorMsg &&\n                \"is-invalid\"}`}\n              placeholder=\"First name\"\n              name=\"firstname\"\n              value={this.state.firstname}\n              onChange={this.handleChange}\n            />\n            <div className=\"invalid-feedback\">\n              {this.state.firstnameErrorMsg}\n            </div>\n          </div>\n\n          <div className=\"form-group\">\n            <label>Last name</label>\n            <input\n              type=\"text\"\n              className={`form-control ${this.state.lastnameErrorMsg &&\n                \"is-invalid\"}`}\n              placeholder=\"Last name\"\n              name=\"lastname\"\n              value={this.state.lastname}\n              onChange={this.handleChange}\n            />\n            <div className=\"invalid-feedback\">\n              {this.state.lastnameErrorMsg}\n            </div>\n          </div>\n\n          <div className=\"form-group\">\n            <label>Email address</label>\n            <input\n              type=\"email\"\n              className={`form-control ${this.state.emailErrorMsg &&\n                \"is-invalid\"}`}\n              placeholder=\"Enter email\"\n              name=\"email\"\n              value={this.state.email}\n              onChange={this.handleChange}\n            />\n            <div className=\"invalid-feedback\">{this.state.emailErrorMsg}</div>\n          </div>\n\n          <div className=\"form-group\">\n            <label>Password</label>\n            <input\n              type=\"password\"\n              className={`form-control ${this.state.passwordErrorMsg &&\n                \"is-invalid\"}`}\n              placeholder=\"Enter password\"\n              name=\"password\"\n              value={this.state.password}\n              onChange={this.handleChange}\n            />\n            <div className=\"invalid-feedback\">\n              {this.state.passwordErrorMsg}\n            </div>\n          </div>\n\n          <button type=\"submit\" className=\"btn btn-primary btn-block\">\n            Sign Up\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Form,\n  FormGroup,\n  Label,\n  Input\n} from \"reactstrap\";\n\nexport class Admin extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      title: \"\",\n      author: \"\",\n      description: \"\",\n      image: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleFileChange = this.handleFileChange.bind(this);\n  }\n  handleChange(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n  toggle = () => {\n    this.setState({\n      modal: !this.state.modal\n    });\n  };\n  handleFileChange = event => {\n    this.setState({\n      file: event.target.files[0]\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const formData = new FormData(); //https://developer.mozilla.org/en-US/docs/Web/API/FormData/FormData\n    formData.append(\"file\", this.state.file);\n    formData.append(\"title\", this.state.title);\n    formData.append(\"author\", this.state.author);\n    formData.append(\"description\", this.state.description);\n    formData.append(\"image\", this.state.image);\n\n    fetch(\"/private/book/new\", {\n      method: \"POST\",\n      body: formData,\n      redirect: \"follow\",\n      credentials: \"same-origin\"\n    })\n      .then(response => {\n        if (response.status === 201) {\n          console.log(\"new book created\");\n          this.props.history.push(\"/booklist\");\n        }\n      })\n      .catch(e => console.log(e));\n\n    // const myHeaders = new Headers();\n    // myHeaders.append(\"Content-Type\", \"application/json\");\n\n    // const raw = JSON.stringify({\n    //   title: this.state.title,\n    //   author: this.state.author,\n    //   description: this.state.description,\n    //   image: \"\"\n    // });\n\n    // const requestOptions = {\n    //   method: \"POST\",\n    //   headers: myHeaders,\n    //   body: raw,\n    //   redirect: \"follow\",\n    //   credentials: \"same-origin\"\n    // };\n\n    // fetch(\"/private/book/new\", requestOptions)\n    //   .then(async response => {\n    //     if (+response.status === 200) {\n    //       this.props.history.push(\"/booklist\");\n    //       console.log(await response.json());\n    //     }\n    //   })\n    //   .catch(error => console.log(\"error\", error));\n  };\n\n  render() {\n    return (\n      <div className=\"auth-inner\">\n        <div>\n          <Button\n            color=\"primary\"\n            style={{ marginBottom: \"2rem\" }}\n            onClick={this.toggle}\n          >\n            Add Book\n          </Button>\n\n          <Modal isOpen={this.state.modal} toggle={this.toggle}>\n            <ModalHeader toggle={this.toggle}>\n              Add book to your library\n            </ModalHeader>\n            <ModalBody>\n              <Form onSubmit={this.handleSubmit} className=\"form\">\n                <FormGroup>\n                  <Label for=\"title\">Title:</Label>\n                  <Input\n                    color=\"black\"\n                    type=\"text\"\n                    name=\"title\"\n                    placeholder=\"\"\n                    value={this.state.title}\n                    onChange={this.handleChange}\n                  />\n                  <Label for=\"author\">Author:</Label>\n                  <Input\n                    type=\"text\"\n                    name=\"author\"\n                    id=\"author\"\n                    placeholder=\"\"\n                    value={this.state.author}\n                    onChange={this.handleChange}\n                  />\n                  <Label for=\"description\">Description:</Label>\n                  <Input\n                    type=\"text\"\n                    name=\"description\"\n                    placeholder=\"\"\n                    value={this.state.description}\n                    onChange={this.handleChange}\n                  />\n\n                  <Label for=\"image\">Image:</Label>\n                  <Input\n                    className=\"form-input\"\n                    type=\"file\"\n                    id=\"image\"\n                    name=\"image\"\n                    onChange={this.handleFileChange}\n                  ></Input>\n                  <Button color=\"dark\" style={{ marginTop: \"2rem\" }} block>\n                    Add Book\n                  </Button>\n                </FormGroup>\n              </Form>\n            </ModalBody>\n          </Modal>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport {\n  Card,\n  CardImg,\n  CardText,\n  CardBody,\n  CardTitle,\n  CardSubtitle,\n  Button,\n  Col\n} from \"reactstrap\";\n\nconst Book = props => {\n  console.log(\"Book props\", props);\n  return (\n    <Col xs=\"3\" sm=\"3\" md=\"4\" lg=\"4\" xl=\"4\">\n      <Card>\n        <CardImg\n          top\n          width=\"100%\"\n          src={`http://localhost:4000/${props.book.image}`}\n          alt=\"Card image cap\"\n        />\n        <CardBody>\n          <CardTitle>title: {props.book.title}</CardTitle>\n          <CardSubtitle>by: {props.book.author}</CardSubtitle>\n          <CardText>description: {props.book.description}</CardText>\n          <Button color=\"danger\" onClick={() => props.onDelete(props.book._id)}>\n            Delete\n          </Button>\n          <Link to={`/editbook/${props.book._id}`}>\n            <Button color=\"primary\">Edit Book</Button>\n          </Link>\n        </CardBody>\n      </Card>\n    </Col>\n  );\n};\n\nexport default Book;\n","import React, { Component } from \"react\";\nimport { Container, Row } from \"reactstrap\";\nimport Book from \"./Book\";\n\nexport class BookList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      books: []\n    };\n  }\n\n  handleDelete = bookId => {\n    const requestOptions = {\n      method: \"DELETE\"\n    };\n    fetch(`/private/book/${bookId}`, requestOptions)\n      .then(response => response.json())\n      .then(result => {\n        this.setState({ books: result });\n        console.log(result);\n        this.fetchBookList();\n      })\n      .catch(error => console.log(\"error\", error));\n  };\n\n  fetchBookList() {\n    const requestOptions = {\n      method: \"GET\",\n      redirect: \"follow\"\n    };\n\n    fetch(\"/book/find\", requestOptions)\n      .then(response => response.json())\n      .then(result => {\n        this.setState({ books: result });\n        console.log(result);\n      })\n      .catch(error => console.log(\"error\", error));\n  }\n\n  componentDidMount() {\n    const requestOptions = {\n      method: \"GET\",\n      redirect: \"follow\"\n    };\n\n    fetch(\"/book/find\", requestOptions)\n      .then(response => response.json())\n      .then(result => {\n        this.setState({ books: result });\n        console.log(result);\n      })\n      .catch(error => console.log(\"error\", error));\n  }\n\n  renderBooks() {\n    if (!this.state.books.length) {\n      return <div>loading ...</div>;\n    }\n\n    return this.state.books.map(book => {\n      return (\n        <Book\n          key={book._id}\n          book={book}\n          onDelete={this.handleDelete}\n          onClick={this.handleEdit}\n        />\n      );\n    });\n  }\n  render() {\n    return (\n      <Container>\n        <Row>{this.renderBooks()}</Row>\n      </Container>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Button, Form, FormGroup, Label, Input } from \"reactstrap\";\n\nexport class EditBook extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      title: \"\",\n      author: \"\",\n      description: \"\",\n      image: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n  toggle = () => {\n    this.setState({\n      modal: !this.state.modal\n    });\n  };\n\n  handleEdit = event => {\n    event.preventDefault();\n    console.log(\"handle edit reached\");\n    const myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n\n    const urlencoded = new URLSearchParams();\n    urlencoded.append(\"title\", this.state.title);\n    urlencoded.append(\"author\", this.state.author);\n    urlencoded.append(\"description\", this.state.description);\n    urlencoded.append(\"image\", this.state.image);\n\n    const requestOptions = {\n      method: \"PUT\",\n      headers: myHeaders,\n      body: urlencoded,\n      redirect: \"follow\",\n      credentials: \"same-origin\"\n    };\n    const bookID = this.props.match.params.bookid;\n\n    fetch(`/private/book/${bookID}`, requestOptions)\n      .then(response => response.json())\n      .then(result => {\n        this.setState({ books: result });\n        console.log(result);\n        this.props.history.push(\"/booklist\");\n      })\n      .catch(error => console.log(\"error\", error));\n  };\n\n  componentDidMount() {\n    const requestOptions = {\n      method: \"GET\",\n      redirect: \"follow\"\n    };\n\n    const bookID = this.props.match.params.bookid;\n    console.log(bookID);\n\n    fetch(`/private/book/${bookID}`, requestOptions)\n      .then(response => {\n        console.log(response);\n        return response.json();\n      })\n      .then(result => {\n        this.setState({\n          title: result.title,\n          author: result.author,\n          description: result.description,\n          image: result.image\n        });\n        console.log(result);\n      })\n      .catch(error => console.log(\"error\", error));\n  }\n  render() {\n    return (\n      <div className=\"auth-inner\">\n        <Form onSubmit={this.handleEdit} className=\"form\">\n          <FormGroup>\n            <Label for=\"title\">Title:</Label>\n            <Input\n              color=\"black\"\n              type=\"text\"\n              name=\"title\"\n              placeholder=\"\"\n              value={this.state.title}\n              onChange={this.handleChange}\n            />\n            <Label for=\"author\">Author:</Label>\n            <Input\n              type=\"text\"\n              name=\"author\"\n              id=\"author\"\n              placeholder=\"\"\n              value={this.state.author}\n              onChange={this.handleChange}\n            />\n            <Label for=\"description\">Description:</Label>\n            <Input\n              type=\"text\"\n              name=\"description\"\n              placeholder=\"\"\n              value={this.state.description}\n              onChange={this.handleChange}\n            />\n            <Label for=\"image\">Image:</Label>\n            <Input type=\"select\" name=\"image\"></Input>\n            <Button\n              type=\"submit\"\n              color=\"dark\"\n              style={{ marginTop: \"2rem\" }}\n              block\n            >\n              Edit Book\n            </Button>\n          </FormGroup>\n        </Form>\n      </div>\n    );\n  }\n}\n","import React, { useState } from \"react\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { Login } from \"./components/auth/Login\";\nimport { SignUp } from \"./components/auth/Signup\";\nimport { Admin } from \"./components/Admin\";\nimport { BookList } from \"./components/BookList\";\nimport { EditBook } from \"./components/EditBook\";\n\nfunction App() {\n  const [userLogin, setUserLogin] = useState(false);\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <nav className=\"navbar navbar-expand-lg navbar-light fixed-top\">\n          <div className=\"container\">\n            <Link className=\"navbar-brand\" to={\"/sign-in\"}>\n              S&S Book Store\n            </Link>\n\n            <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\n              <ul className=\"navbar-nav ml-auto\">\n                <li className=\"nav-item\">\n                  <Link className=\"nav-link\" to={\"/booklist\"}>\n                    BookList\n                  </Link>\n                </li>\n                <div\n                  className=\"collapse navbar-collapse\"\n                  id=\"navbarTogglerDemo02\"\n                >\n                  <ul className=\"navbar-nav ml-auto\">\n                    <li className=\"nav-item\">\n                      <Link className=\"nav-link\" to={\"/admin\"}>\n                        Admin\n                      </Link>\n                    </li>\n                    <div\n                      className=\"collapse navbar-collapse\"\n                      id=\"navbarTogglerDemo02\"\n                    >\n                      <ul className=\"navbar-nav ml-auto\">\n                        <li className=\"nav-item\">\n                          <Link className=\"nav-link\" to={\"/sign-in\"}>\n                            Login\n                          </Link>\n                        </li>\n                        <li className=\"nav-item\">\n                          <Link className=\"nav-link\" to={\"/sign-up\"}>\n                            Sign up\n                          </Link>\n                        </li>\n                      </ul>\n                    </div>\n                  </ul>\n                </div>\n              </ul>\n            </div>\n          </div>\n        </nav>\n\n        <div className=\"auth-wrapper\">\n          <Switch>\n            <Route exact path=\"/\" component={Login} />\n            <Route\n              path=\"/sign-in\"\n              render={props => (\n                <Login {...props} changeLoginStatus={setUserLogin} />\n              )}\n            ></Route>\n            <Route path=\"/sign-up\" component={SignUp} />\n\n            {userLogin && <Route path=\"/admin\" component={Admin} />}\n          </Switch>\n        </div>\n\n        <Switch>\n          {userLogin && <Route path=\"/booklist\" component={BookList} />}\n          <Route path=\"/editbook/:bookid\" component={EditBook} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}